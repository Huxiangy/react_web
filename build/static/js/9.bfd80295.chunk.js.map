{"version":3,"sources":["views/Login/Login.jsx","views/Login/index.js"],"names":["login","state","loading","showLoading","setState","handleSubmit","event","preventDefault","props","form","validateFields","err","values","username","auth","localStorage","setItem","JSON","stringify","timer","setTimeout","message","success","history","push","notification","open","duration","description","destroy","this","clearTimeout","getFieldDecorator","className","onSubmit","Item","rules","required","prefix","type","style","color","placeholder","htmlType","Component","withRouter","create","Login"],"mappings":"qVAWMA,G,kNACLC,MAAQ,CACPC,SAAS,G,EAGVC,YAAc,WACb,EAAKC,SAAS,CACbF,SAAU,K,EAKTG,aAAe,SAACC,GACZA,EAAMC,iBAEN,EAAKC,MAAMC,KAAKC,gBAAe,SAACC,EAAKC,GACjC,IAAKD,EAAK,CAiBN,OAAQC,EAAOC,UACX,IAAK,OACDD,EAAOE,KAAO,EACd,MACJ,QACIF,EAAOE,KAAO,EAGtBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,IAC5C,EAAKT,cACL,EAAKgB,MAAQC,YAAW,WACpBC,EAAA,EAAQC,QAAQ,6BAChB,EAAKd,MAAMe,QAAQC,KAAK,OACzB,U,mFAObC,EAAA,EAAaC,KAAK,CACZL,QAAS,4EACTM,SAAU,KACVC,YAAa,gG,6CAMjBH,EAAA,EAAaI,UACbC,KAAKX,OAASY,aAAaD,KAAKX,S,+BAG1B,IACEa,EAAsBF,KAAKtB,MAAMC,KAAjCuB,kBACR,OACI,uBAAQC,UAAU,yBACd,yBAAKA,UAAU,SACX,yBAAKA,UAAU,cACX,oEACA,4BACA,uBAAMC,SAAUJ,KAAKzB,cACjB,sBAAM8B,KAAN,KACKH,EAAkB,WAAY,CAC3BI,MAAO,CAAC,CAAEC,UAAU,EAAMhB,QAAS,2CADtCW,CAGG,uBACIM,OAAQ,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,yBAIxB,sBAAMP,KAAN,KACKH,EAAkB,WAAY,CAC3BI,MAAO,CAAC,CAAEC,UAAU,EAAMhB,QAAS,oCADtCW,CAGG,uBACIM,OAAQ,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CF,KAAK,WACLG,YAAY,mBAIxB,sBAAMP,KAAN,KACI,uBACII,KAAK,UACLI,SAAS,SACTV,UAAU,oBACV/B,QAAS4B,KAAK7B,MAAMC,SAJxB,yB,GAjGZ0C,cAkHLC,cAAW,IAAKC,QAAL,CAAc9C,IC3HzB+C","file":"static/js/9.bfd80295.chunk.js","sourcesContent":["/*\r\n * 登录界面\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Layout, Input, Icon, Form, Button, Divider, message, notification } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\n// import axios from '@/api';\r\n// import { API } from '@/api/config';\r\nimport '../../style/view-style/login.scss';\r\n\r\nclass login extends Component {\r\n\tstate = {\r\n\t\tloading: false\r\n\t}\r\n\r\n\tshowLoading = () => {\r\n\t\tthis.setState({\r\n\t\t\tloading : true\r\n\t\t})\r\n\t}\r\n\r\n\t// 处理用户提交的账号密码\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // validateFields 校验并获取一组输入域的值与 Error，若 fieldNames 参数为空，则校验全部组件\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // let { username, password } = values\r\n                // axios\r\n                //     .post(`${API}/login`, { username, password })\r\n                //     .then(res => {\r\n                //         if (res.data.code === 0) {\r\n                //             localStorage.setItem('user', JSON.stringify(res.data.data.user))\r\n                //             localStorage.setItem('token', res.data.data.token)\r\n                //             this.props.history.push('/')\r\n                //             message.success('登录成功!')\r\n                //         } else {\r\n                //             // 这里处理一些错误信息\r\n                //         }\r\n                //     })\r\n                //     .catch(err => {})\r\n\r\n                // 这里可以做权限校验 模拟接口返回用户权限标识\r\n                switch (values.username) {\r\n                    case 'wowu':\r\n                        values.auth = 0\r\n                        break\r\n                    default:\r\n                        values.auth = 1\r\n                }\r\n\r\n                localStorage.setItem('user', JSON.stringify(values))\r\n                this.showLoading()\r\n                this.timer = setTimeout(() => {\r\n                    message.success('登录成功!')\r\n                    this.props.history.push('/')\r\n                }, 2000)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 组件挂载之后\r\n    componentDidMount() {\r\n    \t notification.open({\r\n            message: '欢迎使用我武-疫情管理平台',\r\n            duration: null,\r\n            description: '账号 wowu(管理员) 其他(游客) 密码随意'\r\n        })\r\n    }\r\n\r\n    // 组件被卸载的时候调用\r\n    componentWillUnmount() {\r\n        notification.destroy()\r\n        this.timer && clearTimeout(this.timer)\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form\r\n        return (\r\n            <Layout className='login animated fadeIn'>\r\n                <div className='model'>\r\n                    <div className='login-form'>\r\n                        <h3>后台管理系统</h3>\r\n                        <Divider />\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('username', {\r\n                                    rules: [{ required: true, message: '请输入用户名!' }]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder='用户名'\r\n                                    />\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [{ required: true, message: '请输入密码' }]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type='password'\r\n                                        placeholder='密码'\r\n                                    />\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type='primary'\r\n                                    htmlType='submit'\r\n                                    className='login-form-button'\r\n                                    loading={this.state.loading}>\r\n                                    登录\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Form.create()(login))","import Login from './Login.jsx';\r\n\r\nexport default Login"],"sourceRoot":""}